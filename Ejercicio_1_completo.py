# -*- coding: utf-8 -*-
"""Elena.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Pf-6HwmPMCnfJnSughHwgntRC1pJQWJ
"""

print("hello mundo")
for i in range(1,74,1):
  print(f"hello mundo {i}")

x = 0
while x < 73:
  x += 1
  print ("hello mundo")

for x in range(74):
  print ("hello mundo")

fibonacci = [1,1,2,3,5,8,13,21,34,55,89,55+89]
fibonacci
a=1
b=1
resultado = [1,1]
for e in range (1,72):
  c= a + b
  a = b
  b = c
  resultado.append(c)
print(c)
print(resultado)

import numpy as np
t=np.linspace(0,4,201)
print (t)

from numpy import linspace 
t = linspace (0,4,201)
print (t)

from numpy import linspace
from pandas import DataFrame 
diccionario = {
    "columna t": linspace(0,4,201), 
} 
print (diccionario)

import pandas as pd
col1 = np.linspace(0,4,201)
df = pd.DataFrame(col1, columns = ["t"] )
df["s"] = df["t"].apply(np.sin)
print (df)

df ["s10"] = df["s"].shift(10)
print (df.dropna())

df ["d"] = df["s"] - df["s10"]
print (df)

df

def is_positive(x):
  if x>0: 
    return 1
  else:
    return 0
df ["p"] = df["d"].apply(lambda x: is_positive(x))
df

df.to_csv("ejercicio_clase.csv,sep", sep = ";")

df

df["m"] = df.groupby("p")["d"].transform("mean")
print (df)

#MODIFY EACH STEP IN ORDER TO RUN COMPLETLY THE PROGRAM
print('STEP 1')
for i in range(0,11):
  x = i
print(f'x should be 10:{x}')
if x == 10:
    print('SUCCESS! IN STEP 1')
print('STEP 2')
x = False
for i in range(0,11):
    x = x or True
    if x and  i == 5:
        break 
    
print(f'x should be True:{x}')
print(f'i should be 5:{i}')
if i == 5 and x:
    print('SUCCESS! IN STEP 2')

result = False
i = 73
for x in range(2,i):
  if i%x == 0:
    result = False
    break
if i == x + 1:
    result = True 
print (result)

def is_prime(y):
  for x in range(2,y):
    if y%x == 0:
      result = False
      break
  if y == x + 1:
      result = True 
  return result
is_prime(5)

contador = 0
last_prime = 1
next_number = last_prime + 1
print (2)
while contador<72:
  next_number = next_number + 1
  if is_prime (next_number):
    contador = contador + 1
    last_prime = next_number
    print (last_prime)

def is_prime(n):
  for i in range(2,n):
    if (n%i) == 0:
      return False
  return True
is_prime(9)

contador = 0
last_prime = 1
last_no_prime = 2
next_number = last_prime + 1
lista_no_primos = []

while contador<20:
  next_number = next_number + 1
  if is_prime (next_number):
    contador = contador + 1
    last_prime = next_number
  else:
    contador = contador +1
    last_no_prime = next_number
    print (last_no_prime)